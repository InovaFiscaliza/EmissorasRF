# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/01a_connectors.ipynb.

# %% auto 0
__all__ = ['DBConnector']

# %% ../../nbs/01a_connectors.ipynb 3
from concurrent.futures import ThreadPoolExecutor
from dataclasses import dataclass

import pyodbc
from pymongo import MongoClient

# from motor.motor_asyncio import AsyncIOMotorClient

# %% ../../nbs/01a_connectors.ipynb 5
@dataclass
class DBConnector:
    def connect(self):
        raise NotImplementedError

    def get_parallel_connections(self, n):
        # This method returns a list of n pyodbc connection objects in parallel
        with ThreadPoolExecutor(max_workers=n) as executor:
            futures = [executor.submit(self.connect) for _ in range(n)]
            return [future.result() for future in futures]
