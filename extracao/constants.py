# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_constants.ipynb.

# %% auto 0
__all__ = ['TIMEOUT', 'RELATORIO', 'ESTACAO', 'MALHA_IBGE', 'FILES', 'PATH_NAV', 'PATH_COM', 'VOR_ILS_DME', 'CHANNELS',
           'IBGE_MUNICIPIOS', 'IBGE_POLIGONO', 'COLUNAS', 'COLS_SRD', 'DTYPES', 'AGG_LICENCIAMENTO', 'AGG_SMP',
           'APP_ANALISE_PT', 'APP_ANALISE_EN', 'ESTADOS', 'MONGO_TELECOM', 'MONGO_SRD', 'MONGO_SMP', 'SQL_STEL',
           'SQL_VALIDA_COORD', 'SQL_RADCOM', 'MIN_LAT', 'MAX_LAT', 'MIN_LONG', 'MAX_LONG', 'REGEX_ESTADOS', 'RE_BW']

# %% ../nbs/00_constants.ipynb 2
import re
from pathlib import Path

# %% ../nbs/00_constants.ipynb 4
TIMEOUT = 5
RELATORIO = "http://sistemas.anatel.gov.br/se/eApp/reports/b/srd/resumo_sistema.php?id={id}&state={state}"
ESTACAO = "http://sistemas.anatel.gov.br/se/public/view/b/srd.php?wfid=estacoes&id={}"
MALHA_IBGE = "https://geoftp.ibge.gov.br/organizacao_do_territorio/malhas_territoriais/malhas_municipais/municipio_2022/Brasil/BR/BR_Municipios_2022.zip"
FILES = Path(__file__).parent / "datasources" / "arquivos"
PATH_NAV = FILES / "VHF_NAV.csv"
PATH_COM = FILES / "VHF_COM.csv"
VOR_ILS_DME = FILES / "VOR_ILS_DME_Channel.csv"
CHANNELS = FILES / "canalizacao_smp.csv"
IBGE_MUNICIPIOS = FILES / "municipios.csv"
IBGE_POLIGONO = FILES / "BR_Municipios_2022" / "BR_Municipios_2022.shp"

# %% ../nbs/00_constants.ipynb 7
COLUNAS = [
    "Frequência",
    "Entidade",
    "Fistel",
    "Serviço",
    "Estação",
    "Latitude",
    "Longitude",
    "Código_Município",
    "Município",
    "UF",
    "Classe",
    "Classe_Emissão",
    "Largura_Emissão(kHz)",
    "Validade_RF",
    "Status",
    "Fonte",
    "Multiplicidade",
    "Log",
]

COLS_SRD = COLUNAS + [
    "Cota_Base_Torre(m)",
    "Potência_Transmissor(W)",
    "Ganho_Antena(dBd)",
    "Ângulo_Elevação_Antena",
    "Azimute_Antena",
    "Altura_Antena(m)",
    "Atenuação_Linha(db/100m)",
    "Perdas_Acessórias_Linha(db)",
    "Padrão_Antena(dBd)",
    "Comprimento_Linha(m)",
    "Relatório_Canal",
]

DTYPES = {
    "Frequência"
    "Entidade"
    "Fistel"
    "Serviço"
    "Estação"
    "Latitude"
    "Longitude"
    "Código_Município"
    "Município"
    "UF"
    "Classe"
    "Classe_Emissão"
    "Largura_Emissão(kHz)"
    "Validade_RF"
    "Status"
    "Fonte"
    "Multiplicidade"
    "Log"
    "Cota_Base_Torre(m)"
    "Potência_Transmissor(W)"
    "Ganho_Antena(dBd)"
    "Ângulo_Elevação_Antena"
    "Azimute_Antena"
    "Altura_Antena(m)"
    "Atenuação_Linha(db/100m)"
    "Perdas_Acessórias_Linha(db)"
    "Padrão_Antena(dBd)"
    "Comprimento_Linha(m)"
    "Relatório_Canal"
}

# COLS_LICENCIAMENTO = [
# 	'Frequência',
# 	'Entidade',
# 	'Fistel',
# 	'Estação',
# 	'Município',
# 	'Código_Município',
# 	'UF',
# 	'Latitude',
# 	'Longitude',
# 	'Classe',
# 	'Serviço',
# 	'Classe_Emissão',
# 	'Largura_Emissão(kHz)',
# 	'Validade_RF',
# 	'Status',
# 	'Fonte',
# 	'Multiplicidade',
# 	'Potência_Transmissor(W)',
# 	'Cod_Tipo_Antena',
# 	'Polarização_Antena',
# 	# "Raio_Antena",
# 	'Ganho_Antena',
# 	'FC_Antena',
# 	'Ang_MP_Antena',
# 	'Ângulo_Elevação_Antena',
# 	'Azimute_Antena',
# 	'Altura_Antena',
# 	'Perdas_Acessorias',
# 	'Log',
# ]

AGG_LICENCIAMENTO = [
    "Frequência",
    "Fistel",
    "Código_Município",
    "Longitude",
    "Latitude",
    "Classe",
    "Serviço",
    "Classe_Emissão",
    "Largura_Emissão(kHz)",
]

AGG_SMP = [
    "Código_Município",
    "Fistel",
    "Frequência",
    "Largura_Emissão(kHz)",
    "Classe_Emissão",
    "Tecnologia",
]

APP_ANALISE_PT = (
    "Frequência",
    "Latitude",
    "Longitude",
    "Descrição",
    "Serviço",
    "Estação",
    "Classe_Emissão",
    "Largura_Emissão(kHz)",
)

APP_ANALISE_EN = (
    "Frequency",
    "Latitude",
    "Longitude",
    "Description",
    "Service",
    "Station",
    "Class",
    "BW",
)

ESTADOS = (
    "AC",
    "AL",
    "AP",
    "AM",
    "BA",
    "CE",
    "ES",
    "GO",
    "MA",
    "MT",
    "MS",
    "MG",
    "PA",
    "PB",
    "PR",
    "PE",
    "PI",
    "RJ",
    "RN",
    "RS",
    "RO",
    "RR",
    "SC",
    "SP",
    "SE",
    "TO",
    "DF",
)

# %% ../nbs/00_constants.ipynb 9
MONGO_TELECOM = {
    "$and": [
        {"DataExclusao": None},
        {"DataValidade": {"$nin": ["", None]}},
        {"Status.state": "LIC-LIC-01"},
        {"NumServico": {"$nin": ["010", "045", "171", "450", "750", "", None]}},
        {"FreqTxMHz": {"$nin": [None, "", 0], "$type": 1.0}},
        {"CodMunicipio": {"$nin": [None, ""]}},
        {"NumFistel": {"$nin": [None, ""]}},
        {"CodTipoClasseEstacao": {"$nin": [None, ""]}},
        {"DesignacaoEmissao": {"$nin": [None, ""]}},
    ]
}


MONGO_SRD = {
    "$and": [
        {"frequency": {"$nin": [None, "", 0], "$type": 1.0}},
        {"srd_planobasico.CodMunicipio": {"$nin": [None, ""]}},
        {"NumFistel": {"$nin": [None, ""]}},
        # {'habilitacao.DataValFreq': {'$nin': [None, '']}},
    ]
}

MONGO_SMP = {
    "$and": [
        {"DataExclusao": None},
        {"DataValidade": {"$nin": ["", None]}},
        {"Status.state": "LIC-LIC-01"},
        {"NumServico": "010"},
        {"FreqTxMHz": {"$nin": [None, "", 0], "$type": 1.0}},
        {"CodMunicipio": {"$nin": [None, ""]}},
        {"NumFistel": {"$nin": [None, ""]}},
        {"CodTipoClasseEstacao": {"$nin": [None, ""]}},
        {"DesignacaoEmissao": {"$nin": [None, ""]}},
        {"Tecnologia": {"$nin": [None, ""]}},
    ]
}

# %% ../nbs/00_constants.ipynb 12
SQL_STEL = """
select 
  distinct f.MedTransmissaoInicial as 'Frequência', 
  uf.SiglaUnidadeFrequencia as 'Unidade', 
  d.CodClasseEmissao as 'Classe_Emissão', 
  d.SiglaLarguraEmissao as 'Largura_Emissão', 
  ce.CodTipoClasseEstacao as 'Classe', 
  e.NumServico as 'Serviço', 
  ent.NomeEntidade as 'Entidade', 
  h.NumFistel as 'Fistel', 
  e.NumEstacao as 'Estação', 
  mu.NomeMunicipio as 'Município',
  mu.CodMunicipio as Código_Município,
  e.SiglaUf as 'UF', 
  e.MedLatitudeDecimal as 'Latitude', 
  e.MedLongitudeDecimal as 'Longitude', 
  c.DataValidadeRadiofrequencia as 'Validade_RF' 
from 
  estacao e 
  left join contrato c on e.IdtContrato = c.Idtcontrato 
  left join frequencia f on f.IdtEstacao = e.IdtEstacao 
  left join CLASSEESTACAO ce on ce.IdtFrequencia = f.IdtFrequencia 
  left join DESIGNACAOEMISSAO d on d.IdtClasseEstacao = ce.IdtClasseEstacao 
  left join HABILITACAO h on h.IdtHabilitacao = c.IdtHabilitacao 
  left join entidade ent on ent.IdtEntidade = h.IdtEntidade 
  left join endereco en on en.IdtEstacao = e.IdtEstacao 
  left join Municipio mu on mu.CodMunicipio = en.CodMunicipio 
  left join Servico s on s.NumServico = h.NumServico 
  and s.IdtServicoAreaAtendimento = 4 
  left join UnidadeFrequencia uf on uf.IdtUnidadeFrequencia = f.IdtUnidadeTransmissao 
where 
  h.NumServico <> '010' 
  and e.DataExclusao is null 
  and e.IndStatusEstacao = 'L' 
  and mu.CodMunicipio is not null
  and f.MedTransmissaoInicial is not null 
  and f.CodStatusRegistro = 'L' 
  and c.DataValidadeRadiofrequencia is not null 
"""

# %% ../nbs/00_constants.ipynb 13
SQL_VALIDA_COORD = """
    SELECT 
        mun.NO_MUNICIPIO 
        , mun.NU_LONGITUDE 
        , mun.NU_LATITUDE         
        , CONVERT(int, 
            (mun.GE_POLIGONO.STIntersects(geometry::STGeomFromText(
                'POINT({} {})', 
                mun.GE_POLIGONO.STSrid)
            )) 
        )AS COORD_VALIDA
    from 
        CORPORATIVO.dbo.TB_IBGE_MUNICIPIO mun
    WHERE
        MUN.CO_MUNICIPIO = {}
"""

# %% ../nbs/00_constants.ipynb 15
SQL_RADCOM = """
select 
  distinct F.MedFrequenciaInicial as 'Frequência', 
  SRD.IndFase as 'Fase', 
  ID.SiglaSituacao as 'Situação', 
  Ent.NomeEntidade as 'Entidade', 
  H.NumFistel as 'Fistel', 
  E.NumEstacao as 'Estação', 
  M.NomeMunicipio as 'Município', 
  M.CodMunicipio as Código_Município,
  PB.SiglaUF as 'UF', 
  SRD.MedLatitudeDecimal as 'Latitude', 
  SRD.MedLongitudeDecimal as 'Longitude' 
from 
  SRD_PEDIDORADCOM SRD 
  left join ESTACAO E on E.IdtHabilitacao = SRD.IdtHabilitacao 
  inner join FREQUENCIA F on F.IdtEstacao = E.IdtEstacao 
  left join HABILITACAO H on H.IdtEntidade = SRD.IdtEntidade 
  left join ENTIDADE Ent on Ent.IdtEntidade = SRD.IdtEntidade 
  left join SRD_PLANOBASICO PB on PB.IdtPlanoBasico = SRD.IdtPlanoBasico 
  left join Municipio M on M.CodMunicipio = PB.CodMunicipio 
  left join SRD_INDICESESTACAO ID on ID.IdtHabilitacao = SRD.IdtHabilitacao 
  left join CONTRATO C on C.IdtContrato = E.IdtContrato 
where 
  SRD.IdtPlanoBasico is not Null 
  and SRD.IndFase is not Null 
order by 
  Frequência, 
  UF, 
  Município

"""

# %% ../nbs/00_constants.ipynb 16
MIN_LAT = -33.7509907  # Arroio Chuy RS
MAX_LAT = 5.2718317  # Monte Caburaí RR
MIN_LONG = -73.80658592032779
MAX_LONG = -32.377816

# %% ../nbs/00_constants.ipynb 17
SQL_VALIDA_COORD = """
    SELECT 
        mun.NO_MUNICIPIO 
        , mun.NU_LONGITUDE 
        , mun.NU_LATITUDE         
        , CONVERT(int, 
            (mun.GE_POLIGONO.STIntersects(geometry::STGeomFromText(
                'POINT({} {})', 
                mun.GE_POLIGONO.STSrid)
            )) 
        )AS COORD_VALIDA
    from 
        CORPORATIVO.dbo.TB_IBGE_MUNICIPIO mun
    WHERE
        MUN.CO_MUNICIPIO = {}
"""

# %% ../nbs/00_constants.ipynb 18
REGEX_ESTADOS = f'({"|".join(ESTADOS)})'
RE_BW = re.compile(r"^(\d{1,3})([HKMG])(\d{0,2})(\w{0,3})")

# %% ../nbs/00_constants.ipynb 20
MIN_LAT = -33.7509907  # Arroio Chuy RS
MAX_LAT = 5.2718317  # Monte Caburaí RR
MIN_LONG = -73.80658592032779
MAX_LONG = -32.377816
