[
  {
    "objectID": "format.html#otimização-dos-tipos-de-dados",
    "href": "format.html#otimização-dos-tipos-de-dados",
    "title": "Formatação",
    "section": "Otimização dos Tipos de dados",
    "text": "Otimização dos Tipos de dados\nA serem criados dataframes, normalmente a tipo de data é aquele com maior resolução possível, nem sempre isso é necessário, os arquivos de espectro mesmo possuem somente uma casa decimal, portanto um float16 já é suficiente para armazená-los. As funções a seguir fazem essa otimização\nCode below borrowed from https://medium.com/bigdatarepublic/advanced-pandas-optimize-speed-and-memory-a654b53be6c2\n\n\noptimize_floats\n\n optimize_floats (df:pandas.core.frame.DataFrame,\n                  exclude:Iterable[str]=None)\n\nOtimiza os floats do dataframe para reduzir o uso de memória\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\nDataFrame\n\nDataFrame a ser otimizado\n\n\nexclude\nIterable\nNone\nColunas a serem excluidas da otimização\n\n\nReturns\nDataFrame\n\nDataFrame com as colunas do tipo float otimizadas\n\n\n\n\n\n\noptimize_ints\n\n optimize_ints (df:pandas.core.frame.DataFrame,\n                exclude:Iterable[str]=None)\n\nOtimiza os ints do dataframe para reduzir o uso de memória\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\nDataFrame\n\nDataframe a ser otimizado\n\n\nexclude\nIterable\nNone\nColunas a serem excluidas da otimização\n\n\nReturns\nDataFrame\n\nDataFrame com as colunas do tipo int otimizadas\n\n\n\n\n\n\noptimize_objects\n\n optimize_objects (df:pandas.core.frame.DataFrame,\n                   datetime_features:Iterable[str]=None,\n                   exclude:Iterable[str]=None)\n\nOtimiza as colunas do tipo object no DataFrame para category ou string para reduzir a memória e tamanho de arquivo\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\nDataFrame\n\nDataFrame a ser otimizado\n\n\ndatetime_features\nIterable\nNone\nColunas que serão convertidas para datetime\n\n\nexclude\nIterable\nNone\nColunas que não serão convertidas\n\n\nReturns\nDataFrame\n\nDataFrame com as colunas do tipo object otimizadas\n\n\n\n\n\n\ndf_optimize\n\n df_optimize (df:pandas.core.frame.DataFrame,\n              datetime_features:Iterable[str]=None,\n              exclude:Iterable[str]=None)\n\nFunção que encapsula as anteriores para otimizar os tipos de dados e reduzir o tamanho do arquivo e uso de memória\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\nDataFrame\n\nDataFrame a ser otimizado\n\n\ndatetime_features\nIterable\nNone\nColunas que serão convertidas para datetime\n\n\nexclude\nIterable\nNone\nColunas que não serão convertidas\n\n\nReturns\nDataFrame\n\nDataFrame com as colunas com tipos de dados otimizados\n\n\n\n\n\n\nformat_types\n\n format_types (df:pandas.core.frame.DataFrame, stem:str=None)\n\nConvert the columns of a dataframe to optimized types\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\nDataFrame\n\nDataFrame a ser formatado\n\n\nstem\nstr\nNone\nIdentificador do arquivo para otimização específica\n\n\nReturns\nDataFrame\n\nDataFrame formatado"
  },
  {
    "objectID": "reading.html",
    "href": "reading.html",
    "title": "Leitura",
    "section": "",
    "text": "O mosaico atualmente é composto por 2 bases complementares originárias de um banco MongoDB:\n\n\nEstações\nPlano Básico\n\n\n\n\n\n read_mosaico (folder:Union[str,pathlib.Path], update:bool=False)\n\nLê o banco de dados salvo localmente do MOSAICO e opcionalmente o atualiza.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nfolder\nUnion\n\nPasta onde ler/salvar os dados\n\n\nupdate\nbool\nFalse\nAtualiza os dados caso True\n\n\nReturns\nDataFrame\n\nDataframe com os dados do mosaico"
  },
  {
    "objectID": "reading.html#radcom",
    "href": "reading.html#radcom",
    "title": "Leitura",
    "section": "RADCOM",
    "text": "RADCOM\n\n\nread_radcom\n\n read_radcom (folder:Union[str,pathlib.Path], update:bool=False)\n\nLê o banco de dados salvo localmente de RADCOM. Opcionalmente o atualiza pelo Banco de Dados ANATELBDRO05 caso update = True ou não exista o arquivo local\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nfolder\nUnion\n\nPasta onde ler/salvar os dados\n\n\nupdate\nbool\nFalse\nAtualiza os dados caso True\n\n\nReturns\nDataFrame\n\nDataframe com os dados de RADCOM"
  },
  {
    "objectID": "reading.html#stel",
    "href": "reading.html#stel",
    "title": "Leitura",
    "section": "STEL",
    "text": "STEL\n\n\nread_stel\n\n read_stel (folder:Union[str,pathlib.Path], update:bool=False)\n\nLê o banco de dados salvo localmente do STEL.\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nfolder\nUnion\n\nPasta onde ler/salvar os dados\n\n\nupdate\nbool\nFalse\nAtualiza os dados caso True\n\n\nReturns\nDataFrame\n\nDataframe com os dados do STEL"
  },
  {
    "objectID": "reading.html#bases-externas-da-aeronáutica",
    "href": "reading.html#bases-externas-da-aeronáutica",
    "title": "Leitura",
    "section": "Bases Externas da Aeronáutica",
    "text": "Bases Externas da Aeronáutica\n\n\nread_icao\n\n read_icao (folder:Union[str,pathlib.Path], update:bool=False)\n\nLê a base de dados do Frequency Finder e Canalização VOR/ILS/DME\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nfolder\nUnion\n\nPasta onde ler/salvar os dados\n\n\nupdate\nbool\nFalse\nAtualiza os dados caso True\n\n\nReturns\nDataFrame\n\nDataframe com os dados do ICAO\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nread_aisw\n\n read_aisw (folder:Union[str,pathlib.Path], update:bool=False)\n\nFontes da informação: AISWEB, REDEMET, Ofício nº 2/SSARP/14410 e Canalização VOR/ILS/DME.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nfolder\nUnion\n\nPasta onde ler/salvar os dados\n\n\nupdate\nbool\nFalse\nAtualiza os dados caso True\n\n\nReturns\nDataFrame\n\nDataframe com os dados do AISWEB\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nread_aisg\n\n read_aisg (folder:Union[str,pathlib.Path], update:bool=False)\n\nFontes da informação: GEOAISWEB, REDEMET, Ofício nº 2/SSARP/14410 e Canalização VOR/ILS/DME.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nfolder\nUnion\n\nPasta onde ler/salvar os dados\n\n\nupdate\nbool\nFalse\nAtualiza os dados caso True\n\n\nReturns\nDataFrame\n\nDataframe com os dados do GEOAISWEB\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nread_aero\n\n read_aero (folder:Union[str,pathlib.Path], update:bool=False)\n\nLê os arquivos de dados da aeronáutica e retorna os registros comuns e únicos\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nfolder\nUnion\n\nPasta onde ler/salvar os dados\n\n\nupdate\nbool\nFalse\nAtualiza os dados caso True\n\n\nReturns\nDataFrame\n\nDataframe com os dados mesclados das 3 bases da Aeronáutica anteriores"
  },
  {
    "objectID": "reading.html#base-consolidada",
    "href": "reading.html#base-consolidada",
    "title": "Leitura",
    "section": "Base Consolidada",
    "text": "Base Consolidada\n\n\nread_base\n\n read_base (folder:Union[str,pathlib.Path], update:bool=False)\n\nLê a base de dados e opcionalmente a atualiza antes da leitura"
  },
  {
    "objectID": "index.html#instalação",
    "href": "index.html#instalação",
    "title": "Anatel - Consulta e Processamento do Banco de Dados",
    "section": "Instalação",
    "text": "Instalação\npip install anateldb"
  },
  {
    "objectID": "index.html#como-utilizar",
    "href": "index.html#como-utilizar",
    "title": "Anatel - Consulta e Processamento do Banco de Dados",
    "section": "Como utilizar",
    "text": "Como utilizar\n\nConsulta à base de dados formatada para o AppAnalise de Anatel\nA motivação original para a presente biblioteca foi disponibilizar os dados de diferentes fontes da Anatel - e posteriormente da Aeronáutica - programaticamente, para serem utilizadas pelo AppAnalise na identificação de emissões captadas pelos planos de monitoração e também em fiscalização de campo.\nOs dados no formato atual em excel são disponibilizados na pasta dados no repositório https://github.com/ronaldokun/anateldb.\nOs dados em formato otimizado .parquet.gzip são disponibilizados junto ao repositório na pasta dados juntamente com as versões das bases individuais. Futuramente o objetivo é descontinuar a liberação de arquivos em formato excel e disponibilizar apenas os dados em formato otimizado.\n\n\nget_db\n\n get_db (path:Union[str,pathlib.Path], up_base:bool=False,\n         up_icao:bool=False, up_pmec:bool=False, up_geo:bool=False,\n         dist:float=10)\n\nLê e opcionalmente atualiza as bases da Anatel, mescla as bases da Aeronáutica, salva e retorna o arquivo\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\npath\nUnion\n\nPasta onde salvar os arquivos”,\n\n\nup_base\nbool\nFalse\nAtualizar as bases da Anatel?\n\n\nup_icao\nbool\nFalse\nAtualizar a base do ICAO?\n\n\nup_pmec\nbool\nFalse\nAtualizar a base do AISWEB?\n\n\nup_geo\nbool\nFalse\nAtualizar a base do GeoAISWEB?\n\n\ndist\nfloat\n10\nDistância máxima entre as coordenadas consideradas iguais\n\n\nReturns\nDataFrame\n\nRetorna o DataFrame com as bases da Anatel e da Aeronáutica\n\n\n\n\n\n\nMétodos para baixar ou atualizar os arquivos das bases de dados\nfrom anateldb.updates import update_mosaico, update_radcom, update_stel, update_base\nA função seguinte baixa os dados diretamente da interface pública online do Spectrum E\n%%time\nupdate_mosaico(pasta='D:\\OneDrive - ANATEL\\GR01FI3\\BaseDados')\nBaixando as Estações do Mosaico...\nBaixando o Plano Básico das Estações...\nBaixando o Histórico de Atualizações...\nKbô\nWall time: 8.12 s\n%%time\nupdate_radcom('D:\\OneDrive - ANATEL\\GR01FI3\\BaseDados')\nLendo o Banco de Dados de Radcom\nWall time: 1 s\nA função update_stel é bem mais lenta que as demais, dado que o banco de dados do STEL é antigo e abarca todos os registros de outorga de serviços de telecomunicações da ANATEL, com mais de 400.000 registros ativos. Esse banco de dados é atualizado 1 vez ao dia à meia-noite e remete ao estado do dia anterior, portanto não faz sentido atualizá-lo mais de 1 vez por dia.\n%%time\nupdate_stel('D:\\OneDrive - ANATEL\\GR01FI3\\BaseDados')\nA função update_base combina as 3 bases anteriores e uniformiza os campos:\nupdate_base('D:\\OneDrive - ANATEL\\GR01FI3\\BaseDados')\n\n\nMétodos para ler as Bases de Dados\nfrom anateldb.reading import read_radcom, read_stel, read_mosaico, read_base\nradcom = read_radcom(pasta='D:\\OneDrive - ANATEL\\GR01FI3\\BaseDados') ; radcom.head()\n\n\n\n\n\n\n\n\n\nFrequência\n\n\nUnidade\n\n\nLatitude\n\n\nLongitude\n\n\nFase\n\n\nSituação\n\n\nNumero da Estação\n\n\nCNPJ\n\n\nFistel\n\n\nEntidade\n\n\nMunicípio\n\n\nUF\n\n\n\n\n\n\n0\n\n\n104.9\n\n\nMHz\n\n\n-24.861389\n\n\n-54.334722\n\n\n3\n\n\nA\n\n\n641168764\n\n\n00104477000117\n\n\n50011685115\n\n\nACADEMIA CULTURAL DE SANTA HELENA - ACULT - ST…\n\n\nSanta Helena\n\n\nPR\n\n\n\n\n1\n\n\n87.9\n\n\nMHz\n\n\n-7.074444\n\n\n-36.731111\n\n\n3\n\n\nM\n\n\n682699349\n\n\n00284576000128\n\n\n50012524409\n\n\nASSOCIACAO DOS MORADORES E PRODUT. RURAIS DE A…\n\n\nAssunção\n\n\nPB\n\n\n\n\n2\n\n\n87.9\n\n\nMHz\n\n\n-20.323611\n\n\n-44.246944\n\n\n3\n\n\nH\n\n\n659028590\n\n\n00575697000129\n\n\n50011824689\n\n\nASSOCIACAO BONFIM ESPERANCA- ABESPE\n\n\nBonfim\n\n\nMG\n\n\n\n\n3\n\n\n104.9\n\n\nMHz\n\n\n-18.843611\n\n\n-46.792778\n\n\n3\n\n\nB\n\n\n631410937\n\n\n00792795000118\n\n\n50011398132\n\n\nASSOCIACAO DOS TRABALHADORES DE GUIMARANIA (ATG)\n\n\nGuimarânia\n\n\nMG\n\n\n\n\n4\n\n\n87.9\n\n\nMHz\n\n\n-19.466667\n\n\n-45.600000\n\n\n3\n\n\nM\n\n\n631412301\n\n\n00794510000188\n\n\n50011398990\n\n\nFUNDACAO ASSISTENCIAL LAR DA PAZ - FALP\n\n\nDores do Indaiá\n\n\nMG\n\n\n\n\n\n\nSe o argumento update=True for fornecido ou arquivo local não existir, a base de dados é atualizada por meio da função update_radcom.\n\nA função update_radcom somente irá funcionar caso o PC estiver plugado na rede interna cabeada da Anatel.\n\nradcom = read_radcom(pasta='D:\\OneDrive - ANATEL\\GR01FI3\\BaseDados', update=True) ; radcom.tail()\nLendo o Banco de Dados de Radcom\n\n\n\n\n\n\n\n\n\nFrequência\n\n\nUnidade\n\n\nLatitude\n\n\nLongitude\n\n\nFase\n\n\nSituação\n\n\nNumero da Estação\n\n\nCNPJ\n\n\nFistel\n\n\nEntidade\n\n\nMunicípio\n\n\nUF\n\n\n\n\n\n\n4639\n\n\n87.9\n\n\nMHz\n\n\n-10.311667\n\n\n-48.162222\n\n\n1\n\n\nK\n\n\n1011036964\n\n\n08931976000190\n\n\n50411347829\n\n\nASSOCIACAO AMIGOS DA CULTURA E DO MEIO AMBIENT…\n\n\nPalmas\n\n\nTO\n\n\n\n\n4640\n\n\n104.9\n\n\nMHz\n\n\n-10.005000\n\n\n-48.988889\n\n\n1\n\n\nA\n\n\n1011037472\n\n\n19001721000144\n\n\n50416345301\n\n\nASSOCIACAO RADIO COMUNITARIA MONTE SANTO FM\n\n\nMonte Santo do Tocantins\n\n\nTO\n\n\n\n\n4641\n\n\n104.9\n\n\nMHz\n\n\n-5.586389\n\n\n-48.061111\n\n\nP\n\n\nM\n\n\n1011044797\n\n\n19332116000156\n\n\n50416480004\n\n\nASSOCIACAO RADIO COMUNITARIA TOP FM\n\n\nAraguatins\n\n\nTO\n\n\n\n\n4642\n\n\n98.3\n\n\nMHz\n\n\n-28.682222\n\n\n-53.610278\n\n\n2\n\n\nK\n\n\n1011044940\n\n\n97538346000180\n\n\n50416390609\n\n\nASSOCIACAO DE RADIODIFUSAO CIDADE DE CRUZ ALTA\n\n\nCruz Alta\n\n\nRS\n\n\n\n\n4643\n\n\n104.9\n\n\nMHz\n\n\n-6.594722\n\n\n-35.055278\n\n\n1\n\n\nK\n\n\n1011110250\n\n\n10877144000184\n\n\n50411382063\n\n\nASSOCIAÇÃO DE DESENVOLVIMENTO CULTURAL DA RÁDI…\n\n\nMataraca\n\n\nPB\n\n\n\n\n\n\nstel = read_stel(pasta='D:\\OneDrive - ANATEL\\GR01FI3\\BaseDados', update=True)\nOs dados do Stel não serão ilustrados aqui por se tratar de dados de telecomunicação privados, os demais dados de radiodifusão são públicos e disponíveis para qualquer interessado consultar\nSe o argumento update=True for fornecido ou arquivo local não existir, a base de dados é atualizada por meio da função update_stel.\n\nA função update_stel somente irá funcionar caso o PC estiver plugado na rede interna cabeada da Anatel.\n\nmosaico = read_mosaico(pasta='D:\\OneDrive - ANATEL\\GR01FI3\\BaseDados') ; mosaico.tail()\nBaixando as Estações do Mosaico...\nBaixando o Plano Básico das Estações...\nBaixando o Histórico de Atualizações...\nKbô\n\n\n\n\n\n\n\n\n\nServiço\n\n\nSituação\n\n\nEntidade\n\n\nFistel\n\n\nCNPJ\n\n\nMunicípio\n\n\nUF\n\n\nId\n\n\nNúmero da Estação\n\n\nClasse\n\n\nFrequência\n\n\nLatitude\n\n\nLongitude\n\n\nNum_Ato\n\n\nÓrgao\n\n\nData_Ato\n\n\n\n\n\n\n21146\n\n\nRTVD\n\n\nTV-C2\n\n\nM. V. L - COMMUNICARE TELECOMUNICACOES LTDA\n\n\n50419656170\n\n\n12071310000186\n\n\nParauapebas\n\n\nPA\n\n\n5f2068e65ace5\n\n\n\n\nC\n\n\n503\n\n\n-6,0678\n\n\n-49,9037\n\n\n7588\n\n\nORLE\n\n\n2020-12-10 18:21:09\n\n\n\n\n21147\n\n\nRTVD\n\n\nTV-C1\n\n\nMERCES COMUNICACOES LTDA\n\n\n50419663118\n\n\n11322505000199\n\n\nDelmiro Gouveia\n\n\nAL\n\n\n5f218fcfb0d84\n\n\n\n\nC\n\n\n545\n\n\n-9,3853\n\n\n-37,9987\n\n\n9430\n\n\nORLE\n\n\n2017-06-09 00:00:00\n\n\n\n\n21148\n\n\nRTVD\n\n\nTV-C1\n\n\nFUNDACAO EDUCACIONAL E CULTURAL DE IPANEMA\n\n\n50433856696\n\n\n04608796000110\n\n\nSabará\n\n\nMG\n\n\n5f32c1c918e6b\n\n\n\n\nC\n\n\n207\n\n\n-19,89667\n\n\n-43,80722\n\n\n3301\n\n\nORLE\n\n\n2020-06-23 00:00:00\n\n\n\n\n21149\n\n\nFM\n\n\nFM-C2\n\n\nRADIO ITAPIRANGA LTDA\n\n\n50433860456\n\n\n84375872000124\n\n\nItapiranga\n\n\nSC\n\n\n5f68d432841a5\n\n\n\n\nB1\n\n\n105,1\n\n\n-27,15778\n\n\n-53,69583\n\n\n567\n\n\nORLE\n\n\n2021-01-26 17:20:30\n\n\n\n\n21150\n\n\nFM\n\n\nFM-C1\n\n\nEMISSORAS SUL BRASILEIRAS LTDA\n\n\n50433937009\n\n\n95818506000119\n\n\nHorizontina\n\n\nRS\n\n\n5f8dcc96f23f9\n\n\n\n\nB1\n\n\n100,3\n\n\n-27,62833\n\n\n-54,30528\n\n\n3166\n\n\nORLE\n\n\n2020-06-13 00:00:00\n\n\n\n\n\n\nSe o argumento update=True for fornecido ou o arquivo local não existir, a base de dados é atualizada por meio da função update_mosaico.\n\nA função update_mosaico usa a base de dados Pública do Spectrum E, portanto basta somente estar conectado na internet 😎.\n\nA função update_base combina as 3 atualizações de base anteriormente descritas."
  },
  {
    "objectID": "merging.html",
    "href": "merging.html",
    "title": "Mesclagem",
    "section": "",
    "text": "Funções auxiliares para mesclar registros que são iguais das diversas bases da aeronáutica, i.e. estão a uma distância menor que DIST e verificar a validade da mesclagem\n\n\n\n\n check_add_row (df, f, rows, dicts)\n\nMescla os registros em rows de frequência f e os adiciona como uma linha do DataFrame df\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\ndf\n\nDataFrame para mesclar adicionar o registro\n\n\nf\n\nFrequência (MHz) em análise do registro\n\n\nrows\n\nLista de registros para mesclar\n\n\ndicts\n\nDicionário fonte dos registros\n\n\nReturns\nDataFrame\nDataFrame com o registro adicionado\n\n\n\n\n\n\n\n\n get_subsets (f, *dfs)\n\nRetorna os subconjuntos de registros de frequência f em cada dataframe dfs\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\nf\n\nFrequência (MHz) em análise do registro\n\n\ndfs\n\n\n\n\nReturns\nlist\nLista com subconjuntos de registros de frequência f para cada df em dfs\n\n\n\n\n\n\n\n\n merge_closer (frequencies, df, df_left, df_right)\n\nMescla os registros de frequência frequencies de df_left e df_right em df\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\nfrequencies\n\nLista de frequências em comum\n\n\ndf\n\nDataFrame de saída\n\n\ndf_left\n\nDataFrame 1 de entrada da esquerda\n\n\ndf_right\n\nDataFrame 2 de entrada da direita\n\n\nReturns\nDataFrame\nDataFrame de saída com as frequências em comum de df_left e df_right mescladas ou inseridas individualmente\n\n\n\n\n\n\n\n\n merge_triple (frequencies, df, df_left, df_middle, df_right)\n\nMescla os registros de frequência frequencies de df_left, df_middle e df_right em df\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\nfrequencies\n\nLista de frequências em comum\n\n\ndf\n\nDataFrame de saída\n\n\ndf_left\n\nDataFrame 1 de entrada\n\n\ndf_middle\n\nDataFrame 2 de entrada\n\n\ndf_right\n\nDataFrame 3 de entrada\n\n\nReturns\nDataFrame\nDataFrame de saída com as frequências frequencies de df_left, df_middle e df_right mescladas ou inseridas individualmente em df\n\n\n\n\n\n\n\n\n check_merging (df, freqs, dfs)\n\nVerifica a validade da mesclagem dos registros de icao, aisw e aisg em df\n\n\n\n\nDetails\n\n\n\n\ndf\nDataframe to check\n\n\nfreqs\nSets of Frequencies\n\n\ndfs\nDataframes sources of df\n\n\n\n\n\n\n\n\n get_frequencies_set (df1:pandas.core.frame.DataFrame,\n                      df2:pandas.core.frame.DataFrame,\n                      df3:pandas.core.frame.DataFrame)\n\nRetorna todos os conjuntos de frequências do Diagrama de Venn entre os registros de df1, df2 e df3\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\ndf1\nDataFrame\nDataFrame 1\n\n\ndf2\nDataFrame\nDataFrame 2\n\n\ndf3\nDataFrame\nDataFrame 3\n\n\nReturns\ntuple\nTupla com todos os subconjuntos do Diagrama de Venn das frequências de df1, df2 e df3\n\n\n\n\n\n\n\n\n merge_aero (folder)\n\nMescla os registros de mesma frequência e próximos dos arquivos da aeronáutica em folder\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\nfolder\n\nPasta onde estão os arquivos de entrada\n\n\nReturns\nDataFrame\nDataFrame com as bases da Aeronáutica com registros mesclados\n\n\n\n\naero = merge_aero(Path.cwd().parent / 'dados')\n\n\naero.to_parquet(Path.cwd().parent / 'dados' / 'aero.parquet.gzip', compression='gzip')"
  },
  {
    "objectID": "updates.html",
    "href": "updates.html",
    "title": "Atualização",
    "section": "",
    "text": "A função a seguir é um wrapper simples que utiliza o pyodbc para se conectar ao banco de dados base da Anatel e retorna o objeto da conexão\n\n\n\n\n connect_db (server:str='ANATELBDRO05', database:str='SITARWEB',\n             trusted_conn:str='yes', mult_results:bool=True)\n\nConecta ao Banco server e retorna o ‘cursor’ (iterador) do Banco\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nserver\nstr\nANATELBDRO05\nServidor do Banco de Dados\n\n\ndatabase\nstr\nSITARWEB\nNome do Banco de Dados\n\n\ntrusted_conn\nstr\nyes\nConexão Segura: yes | no\n\n\nmult_results\nbool\nTrue\nMúltiplos Resultados\n\n\nReturns\nConnection\n\n\n\n\n\n\ndef test_connection():\n    conn = connect_db()\n    cursor = conn.cursor()\n    for query in (RADCOM,STEL):\n        cursor.execute(query)\n        test_eq(type(cursor.fetchone()), pyodbc.Row)\n\n\n\n\n\n\n clean_mosaico (df:pandas.core.frame.DataFrame,\n                pasta:Union[str,pathlib.Path])\n\nClean the merged dataframe with the data from the MOSAICO page\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\ndf\nDataFrame\nDataFrame com os dados de Estações e Plano_Básico mesclados\n\n\npasta\nUnion\nPasta com os dados de municípios para imputar coordenadas ausentes\n\n\nReturns\nDataFrame\nDataFrame com os dados mesclados e limpos"
  },
  {
    "objectID": "updates.html#atualização-das-bases-de-dados",
    "href": "updates.html#atualização-das-bases-de-dados",
    "title": "Atualização",
    "section": "Atualização das bases de dados",
    "text": "Atualização das bases de dados\nAs bases de dados são atualizadas atráves das funções a seguir, o único argumento passado em todas elas é a pasta na qual os arquivos locais processados serão salvos, os nomes dos arquivos são padronizados e não podem ser editados para que as funções de leitura e processamento recebam somente a pasta na qual esses arquivos foram salvos.\n\n\nupdate_radcom\n\n update_radcom (folder:Union[str,pathlib.Path])\n\nAtualiza a tabela local retornada pela query RADCOM\n\n\n\n\nType\nDetails\n\n\n\n\nfolder\nUnion\nPasta onde salvar os arquivos\n\n\nReturns\nDataFrame\nDataFrame com os dados atualizados\n\n\n\n\n\n\nupdate_stel\n\n update_stel (folder:Union[str,pathlib.Path])\n\nAtualiza a tabela local retornada pela query STEL\n\n\n\n\nType\nDetails\n\n\n\n\nfolder\nUnion\nPasta onde salvar os arquivos\n\n\nReturns\nDataFrame\nDataFrame com os dados atualizados\n\n\n\n\n\n\nupdate_mosaico\n\n update_mosaico (folder:Union[str,pathlib.Path])\n\nAtualiza a tabela local do Mosaico. É baixado e processado arquivos xml zipados da página pública do Spectrum E\n\n\n\n\nType\nDetails\n\n\n\n\nfolder\nUnion\nPasta onde salvar os arquivos\n\n\nReturns\nDataFrame\nDataFrame com os dados atualizados\n\n\n\n\n\n\nupdate_base\n\n update_base (folder:Union[str,pathlib.Path])\n\nWrapper que atualiza opcionalmente lê e atualiza as três bases indicadas anteriormente, as combina e salva o arquivo consolidado na folder folder\n\n\n\n\nType\nDetails\n\n\n\n\nfolder\nUnion\nPasta onde salvar os arquivos\n\n\nReturns\nDataFrame\nDataFrame com os dados atualizados\n\n\n\n\n# from urllib.request import Request, urlopen\n# from urllib.error import URLError\n# req = Request(ESTACAO)\n# try:\n#     response = urlopen(req)\n# except URLError as e:\n#     if hasattr(e, 'reason'):\n#         print('We failed to reach a server.')\n#         print('Reason: ', e.reason)\n#     elif hasattr(e, 'code'):\n#         print('The server couldn\\'t fulfill the request.')\n#         print('Error code: ', e.code)\n# else:\n#     Path.cwd().joinpath('estações.zip').write_bytes(response.read())"
  },
  {
    "objectID": "constants.html#listas",
    "href": "constants.html#listas",
    "title": "Constantes",
    "section": "Listas",
    "text": "Listas"
  },
  {
    "objectID": "constants.html#dicionários",
    "href": "constants.html#dicionários",
    "title": "Constantes",
    "section": "Dicionários",
    "text": "Dicionários"
  },
  {
    "objectID": "constants.html#sql-queries",
    "href": "constants.html#sql-queries",
    "title": "Constantes",
    "section": "SQL QUERIES",
    "text": "SQL QUERIES"
  },
  {
    "objectID": "constants.html#regex",
    "href": "constants.html#regex",
    "title": "Constantes",
    "section": "Regex",
    "text": "Regex"
  },
  {
    "objectID": "main.html",
    "href": "main.html",
    "title": "Principal",
    "section": "",
    "text": "bump_version\n\n bump_version (version:str, part:int=2)\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nversion\nstr\n\nString com a versão atual\n\n\npart\nint\n2\nParte da versão que será incrementada\n\n\nReturns\nstr\n\nRetorna a versão atualizada\n\n\n\n\n\n\nget_modtimes\n\n get_modtimes (pasta:Union[str,pathlib.Path])\n\nRetorna a data de modificação dos arquivos de dados contidos na pasta\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\npasta\nUnion\nPasta onde estão os arquivos esperados de monitoramento\n\n\nReturns\ndict\nRetorna o mtime de todos os arquivos pertinentes da pasta\n\n\n\n\n\n\ncheck_modify_row\n\n check_modify_row (df, f, rows, dicts)\n\nMescla os registros em rows de frequência f e os adiciona como uma linha do DataFrame df\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\ndf\n\nDataFrame para mesclar adicionar o registro\n\n\nf\n\nFrequência (MHz) em análise do registro\n\n\nrows\n\nLista de registros para mesclar\n\n\ndicts\n\nDicionário fonte dos registros\n\n\nReturns\nDataFrame\nRetorna o DataFrame com o registro adicionado se necessário\n\n\n\n\n\n\nadd_aero\n\n add_aero (base, aero, dist:float=10)\n\nMescla os registros de frequência em comum da base da Aeronáutica com a base da Anatel\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nbase\n\n\nBase Consolidada Anatel\n\n\naero\n\n\nBase da Aeronáutica\n\n\ndist\nfloat\n10\nDistância máxima entre as coordenadas\n\n\nReturns\nDataFrame\n\nRetorna o DataFrame com o registro adicionados e mesclados\n\n\n\n\n\n\nget_db\n\n get_db (path:Union[str,pathlib.Path], up_base:bool=False,\n         up_icao:bool=False, up_pmec:bool=False, up_geo:bool=False,\n         dist:float=10)\n\nLê e opcionalmente atualiza as bases da Anatel, mescla as bases da Aeronáutica, salva e retorna o arquivo\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\npath\nUnion\n\nPasta onde salvar os arquivos”,\n\n\nup_base\nbool\nFalse\nAtualizar as bases da Anatel?\n\n\nup_icao\nbool\nFalse\nAtualizar a base do ICAO?\n\n\nup_pmec\nbool\nFalse\nAtualizar a base do AISWEB?\n\n\nup_geo\nbool\nFalse\nAtualizar a base do GeoAISWEB?\n\n\ndist\nfloat\n10\nDistância máxima entre as coordenadas consideradas iguais\n\n\nReturns\nDataFrame\n\nRetorna o DataFrame com as bases da Anatel e da Aeronáutica"
  }
]